# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import protos.service_pb2 as service__pb2


class DetectionCRUDStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Get = channel.unary_unary(
        '/proto.DetectionCRUD/Get',
        request_serializer=service__pb2.DetectionRequest.SerializeToString,
        response_deserializer=service__pb2.DetectionResponse.FromString,
        )
    self.Post = channel.unary_unary(
        '/proto.DetectionCRUD/Post',
        request_serializer=service__pb2.Detection.SerializeToString,
        response_deserializer=service__pb2.DetectionResponseOK.FromString,
        )


class DetectionCRUDServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Post(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DetectionCRUDServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=service__pb2.DetectionRequest.FromString,
          response_serializer=service__pb2.DetectionResponse.SerializeToString,
      ),
      'Post': grpc.unary_unary_rpc_method_handler(
          servicer.Post,
          request_deserializer=service__pb2.Detection.FromString,
          response_serializer=service__pb2.DetectionResponseOK.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.DetectionCRUD', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
